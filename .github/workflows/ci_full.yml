name: CI (Full)

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-lint:
    name: Python Lint & Type Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn ruff mypy

      - name: Ruff (lint)
        run: ruff check api

      - name: mypy (types; permissive)
        run: mypy --ignore-missing-imports api/main.py

      - name: Syntax check
        run: python -m py_compile api/main.py

  docker-build:
    name: Docker Build (API)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: false
          load: false

  arduino-build:
    name: Arduino Build (Nano + ESP8266 + ESP-01S)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare config.h (no secrets)
        run: |
          # Create dummy config.h for CI testing
          cat > config.h <<'CFG'
          #pragma once
          #define WIFI_SSID   "TEST_SSID"
          #define WIFI_PASS   "TEST_PASS"
          #define API_URL     "http://127.0.0.1:8000/api/scan"
          #define RELAY_HOST  "127.0.0.1"
          #define RELAY_PATH  "/relay_open"
          CFG

          # Copy config.h into each Arduino sketch folder (so #include works anywhere)
          mkdir -p arduino/Nano arduino/ESP8266 arduino/ESP01S_Relay
          cp config.h arduino/Nano/config.h
          cp config.h arduino/ESP8266/config.h
          cp config.h arduino/ESP01S_Relay/config.h

          # Patch includes for CI build (safe for both ../config.h and ./config.h)
          sed -i 's#\.\./config.h#config.h#g' arduino/ESP8266/*.ino || true
          sed -i 's#\./config.h#config.h#g' arduino/ESP8266/*.ino || true
          sed -i 's#\.\./config.h#config.h#g' arduino/ESP01S_Relay/*.ino || true
          sed -i 's#\./config.h#config.h#g' arduino/ESP01S_Relay/*.ino || true

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
        # Using default stable version (avoids "unable to get latest version")

      - name: Configure Arduino CLI and install cores
        run: |
          arduino-cli config init
          arduino-cli config add board_manager.additional_urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core update-index
          arduino-cli core install arduino:avr
          arduino-cli core install esp8266:esp8266

      - name: Compile Nano (ATmega328P Old Bootloader)
        run: arduino-cli compile --fqbn arduino:avr:nano:cpu=atmega328old arduino/Nano

      - name: Compile ESP8266 (NodeMCU 1.0 ESP-12E)
        run: arduino-cli compile --fqbn esp8266:esp8266:nodemcuv2 arduino/ESP8266

      - name: Compile ESP-01S Relay (1M)
        run: arduino-cli compile --fqbn esp8266:esp8266:esp01_1m arduino/ESP01S_Relay
